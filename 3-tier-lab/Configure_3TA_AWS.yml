---
- name: Wait for AWS infra to be available
  hosts: frontends, apps, appsdb
  gather_facts: False
  tasks:
    wait_for:
      host: "{{ inventory_hostname }}"
      port: 22
      state: started
      delay: 30
      timeout: 900
      sleep: 30
    delegate_to: localhost

- name: Enable repos for 3-tier app
  hosts: frontends, apps, appsdb
  gather_facts: False
  vars_files:
    - vars/vars.yml
  tasks:
    - name: Enable repos
      copy:
        src: "files/{{ repo_file }}"
        dest: "/etc/yum.repos.d/{{ repo_file }}"
        mode: 0644

- name: setup frontends
  hosts: frontends
  gather_facts: False
  become: yes
  roles:
    - name: haproxy

- name: setup tomcat
  hosts: apps
  gather_facts: False
  become: yes
  roles:
    - name: tomcat

- name: setup postgresql
  hosts: appsdb
  gather_facts: True
  become: yes
  roles:
    - name: postgres

- name: setup apche
  hosts: apps
  gather_facts: False
  become: yes
  roles:
    - name: apache

- name: Smoke test - Verify HAProxy
  hosts: frontends
  gather_facts: no
  become: no
  tasks:
    - name: Wait for services to start
      wait_for:
        timeout: 30
      delegate_to: localhost

    - name: print debug
      debug:
        var: "{{ inventory_hostname }}"

    - name: Get web page content
      uri:
        url: "http://{{ inventory_hostname }}"
        return_content: yes
      register: webpage

    - name: print debug
      debug:
        var: webpage

    - name: Fail if "Welcome to Tomcat" not in the returned content
      fail:
      when: "'Welcome to Tomcat' not in webpage.content"

